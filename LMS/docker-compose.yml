version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    entrypoint: ["/bin/sh","/app/entrypoint.ps1"]  # اجرای اسکریپت برای اطمینان از آماده بودن دیتابیس
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    restart: always  # ری‌استارت خودکار اگر کرش کند

  db:
    image: postgres:15
    container_name: lms_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: lms_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      retries: 5
      timeout: 3s

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    restart: always  # اطمینان از اجرای Redis حتی در صورت کرش

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A LMS.celery worker --loglevel=info
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - DJANGO_SETTINGS_MODULE=LMS.settings
    working_dir: /app
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    restart: always

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A LMS.celery beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - DJANGO_SETTINGS_MODULE=LMS.settings
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
      celery:
        condition: service_started
    restart: always

  flower:
    image: mher/flower
    command: celery --broker=redis://redis:6379/0 flower
    ports:
      - "5555:5555"
    depends_on:
      - redis
      - celery


volumes:
  postgres_data:
